{"version":3,"sources":["components/Header.js","components/PopupWithForm.js","components/ImagePopup.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","Logo","PopupWithForm","props","isOpen","name","type","onClick","onClose","title","formName","noValidate","onSubmit","children","buttonTitle","ImagePopup","Object","keys","card","length","alt","link","CurrentUserContext","React","createContext","Card","currentUser","useContext","cardDeleteButtonClassName","owner","_id","cardLikeButtonClassName","likes","some","i","onCardDelete","onCardClick","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","key","Footer","api","baseUrl","token","this","_baseUrl","_token","url","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","value","body","JSON","stringify","values","item","EditProfilePopup","useState","setName","description","setDescription","useEffect","id","required","minLength","maxLength","placeholder","onChange","e","target","preventDefault","onUpdateUser","EditAvatarPopup","avatarRef","useRef","ref","onUpdateAvatar","current","AddPlacePopup","newCard","setNewCard","evt","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setcurrentUser","setCards","closeAllPopups","all","getItems","cardsData","userData","catch","err","console","log","Provider","deleteItems","putLike","newCards","c","filter","patchUserInfo","newUserInfo","userAvatar","patchAvatar","newUserAvatar","cardData","postNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"sOAWeA,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,eAAeC,IAAKC,QCW1BC,MAff,SAAuBC,GACrB,OACE,6BAASJ,UAAWI,EAAMC,OAAN,uBAA+BD,EAAME,KAArC,wCAA2EF,EAAME,OACnG,yBAAKN,UAAU,oBACb,4BAAQO,KAAK,SAASP,UAAU,gCAAgCQ,QAASJ,EAAMK,UAC/E,wBAAIT,UAAU,gBAAgBI,EAAMM,OACpC,0BAAMJ,KAAMF,EAAMO,SAAUX,UAAU,cAAcY,YAAU,EAACC,SAAUT,EAAMS,UAC5ET,EAAMU,SACP,4BAAQP,KAAK,SAASP,UAAU,wBAAwBI,EAAMW,iBCMzDC,MAdf,SAAoBZ,GAClB,OACE,6BAASJ,UAAWiB,OAAOC,KAAKd,EAAMe,MAAMC,OAAS,EAAjC,sEAClB,yBAAKpB,UAAU,6BACb,4BAAQO,KAAK,SAASP,UAAU,oCAAoCQ,QAASJ,EAAMK,UACnF,4BAAQT,UAAU,iBAChB,yBAAKqB,IAAKjB,EAAMe,KAAKb,KAAML,IAAKG,EAAMe,KAAKG,KAAMtB,UAAU,eAC3D,gCAAYA,UAAU,qBAAqBI,EAAMe,KAAKb,UCRnDiB,EAAqBC,IAAMC,gBCkDzBC,MAhDf,SAActB,GACZ,IAAMuB,EAAcH,IAAMI,WAAWL,GAK/BM,EAHQzB,EAAMe,KAAKW,MAAMC,MAAQJ,EAAYI,IAIzC,yCAA2C,kBAoB/CC,EAHU5B,EAAMe,KAAKc,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAIrD,uCAAyC,iBAGrD,OACE,wBAAI/B,UAAU,uBACZ,4BAAQA,UAAU,oBAChB,4BAAQO,KAAK,QAAQP,UAAW6B,EAA2BrB,QAfjE,WACEJ,EAAMgC,aAAahC,EAAMe,SAerB,yBAAKnB,UAAU,kBAAkBC,IAAKG,EAAMe,KAAKG,KAAMD,IAAKjB,EAAMe,KAAKb,KAAME,QAxBnF,WACEJ,EAAMiC,YAAYjC,EAAMe,SAwBpB,gCAAYnB,UAAU,wBACpB,wBAAIA,UAAU,mBAAmBI,EAAMe,KAAKb,MAC5C,yBAAKN,UAAU,wBACb,4BAAQO,KAAK,SAASP,UAAWgC,EAAyBxB,QAxBpE,WACEJ,EAAMkC,WAAWlC,EAAMe,SAwBf,0BAAMnB,UAAU,yBAAyBI,EAAMe,KAAKc,MAAMb,aCEvDmB,MAtCf,SAAcnC,GACZ,IAAMuB,EAAcH,IAAMI,WAAWL,GAErC,OACE,8BACE,6BAASvB,UAAU,WACjB,yBAAKA,UAAU,iBAAiBQ,QAASJ,EAAMoC,cAC7C,yBAAKvC,IAAK0B,EAAYc,OAAQzC,UAAU,kBAAkBqB,IAAI,6BAC9D,yBAAKrB,UAAU,4BAGjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,kBAAkB2B,EAAYrB,MAC5C,uBAAGN,UAAU,qBAAqB2B,EAAYe,QAChD,4BAAQnC,KAAK,SAASP,UAAU,uBAAuBQ,QAASJ,EAAMuC,iBAExE,4BAAQpC,KAAK,SAASP,UAAU,sBAAsBQ,QAASJ,EAAMwC,cAEvE,6BAAS5C,UAAU,YACjB,wBAAIA,UAAU,kBACXI,EAAMyC,MAAMC,KAAI,SAAC3B,EAAMgB,GAAP,OACf,kBAAC,EAAD,CAAMY,IAAKZ,EACThB,KAAMA,EACNkB,YAAajC,EAAMiC,YACnBC,WAAYlC,EAAMkC,WAClBF,aAAchC,EAAMgC,oBAI5B,kBAAC,EAAD,CACEjB,KAAMf,EAAMe,KACZV,QAASL,EAAMK,UACjB,kBAAC,EAAD,CAAeH,KAAK,WAAWI,MAAM,2DAAcK,YAAY,mBC9BtDiC,MARf,WACE,OACE,6BAAShD,UAAU,UACjB,uBAAGA,UAAU,qBAAb,4B,eCkHSiD,EADH,I,WArHR,WAAYC,EAASC,GAAQ,oBACzBC,KAAKC,SAAWH,EAChBE,KAAKE,OAASH,E,qDAITI,GACL,OAAOC,MAAoCJ,KAAKC,SAAWE,EAAK,CAC5DE,OAAQ,MACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,sBAInBM,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAInCX,EAAKY,GACf,OAAOX,MAAoCJ,KAAKC,SAAWE,EAAK,CAC5DE,OAAQ,QACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjBhE,KAAmC6D,EAAM7D,KACzCoC,MAAkCyB,EAAMzB,UAG3CkB,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,kCAKrCX,EAAKgB,GACb,OAAOf,MAAMJ,KAAKC,SAAWE,EAAK,CAC9BE,OAAQ,OACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjBhE,KAAMiE,EAAOjE,KACbgB,KAAMiD,EAAOjD,SAGhBsC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,kCAIrCX,EAAKiB,GACb,OAAOhB,MAAMJ,KAAKC,SAAWE,EAAK,CAC9BE,OAAQ,QACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjB7B,OAAQ+B,EAAK/B,WAGhBmB,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,kCAKrCX,GACR,OAAOC,MAAMJ,KAAKC,SAAWE,EAAK,CAC9BE,OAAQ,SACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,sBAGnBM,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAIzCX,GACJ,OAAOC,MAAMJ,KAAKC,SAAWE,EAAK,CAC9BE,OAAQ,MACRC,QAAS,CACLC,cAAeP,KAAKE,OACpB,eAAgB,sBAGnBM,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAKzC,CAAQ,+CAAgD,wCCpErDO,MA9Cf,SAA0BrE,GAAQ,IAAD,EACPoB,IAAMkD,SAAS,IADR,mBACxBpE,EADwB,KAClBqE,EADkB,OAEOnD,IAAMkD,SAAS,IAFtB,mBAExBE,EAFwB,KAEXC,EAFW,KAGzBlD,EAAcH,IAAMI,WAAWL,GA0BrC,OAxBAC,IAAMsD,WAAU,WACdH,EAAQhD,EAAYrB,MACpBuE,EAAelD,EAAYe,SAC1B,CAACf,IAsBF,kBAAC,EAAD,CAAerB,KAAK,eAAeI,MAAM,4HAAwBC,SAAS,YAAYG,SACpF,oCACE,2BAAOP,KAAK,OAAOD,KAAK,OAAOyE,GAAG,aAAa/E,UAAU,+BAA+BgF,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,YAAY,qBACxIC,SAvBR,SAA0BC,GACxBV,EAAQU,EAAEC,OAAOnB,QAsBiBA,MAAO7D,GAAQ,KAE7C,0BAAMyE,GAAG,mBAAmB/E,UAAU,sBAAtC,yHACA,2BAAOO,KAAK,OAAOD,KAAK,MAAMyE,GAAG,YAAY/E,UAAU,8BAA8BgF,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMC,YAAY,6CACtIC,SAvBR,SAAiCC,GAC/BR,EAAeQ,EAAEC,OAAOnB,QAsBiBA,MAAOS,GAAe,KAC3D,0BAAMG,GAAG,kBAAkB/E,UAAU,sBAArC,0HAGFe,YAAY,yDAAYV,OAAQD,EAAMC,OAAQI,QAASL,EAAMK,QAASI,SAvB1E,SAAsBwE,GAEpBA,EAAEE,iBAGFnF,EAAMoF,aAAa,CACjBlF,OACAoC,MAAOkC,QCHEa,MAtBf,SAAyBrF,GACvB,IAAMsF,EAAYlE,IAAMmE,SASxB,OACE,kBAAC,EAAD,CAAerF,KAAK,aAAaI,MAAM,wFAAkBC,SAAS,cAAcG,SAC9E,oCACE,2BAAO8E,IAAKF,EAAWnF,KAAK,MAAMwE,GAAG,eAAezE,KAAK,OAAO6E,YAAY,uCAASnF,UAAU,iCAAiCgF,UAAQ,EAACC,UAAU,MACnJ,0BAAMF,GAAG,qBAAqB/E,UAAU,sBAAxC,0HAGFe,YAAY,yDAAYV,OAAQD,EAAMC,OAAQI,QAASL,EAAMK,QAASI,SAd1E,SAAsBwE,GACpBA,EAAEE,iBAEFnF,EAAMyF,eAAe,CACnBpD,OAAQiD,EAAUI,QAAQ3B,Y,OC6BjB4B,MApCf,SAAuB3F,GAAQ,IAAD,EACEoB,IAAMkD,SAAS,CAAEpE,KAAM,GAAIgB,KAAM,KADnC,mBACrB0E,EADqB,KACZC,EADY,KAkB5B,OACE,kBAAC,EAAD,CAAe3F,KAAK,WAAWI,MAAM,gEAAcC,SAAS,WAAWG,SACrE,oCACE,2BAAOsE,SAlBb,SAAyBc,GACvBD,EAAW,2BAAKD,GAAN,IAAe1F,KAAM4F,EAAIZ,OAAOnB,UAiBJ5D,KAAK,OAAOD,KAAK,YAAYyE,GAAG,mBAAmBI,YAAY,mDACjGnF,UAAU,wCAAwCgF,UAAQ,EAACC,UAAU,IAAIC,UAAU,KACnFf,MAAO6B,EAAQ1F,OAEf,0BAAMyE,GAAG,yBAAyB/E,UAAU,sBAA5C,yHACA,2BAAOoF,SAnBb,SAAyBc,GACvBD,EAAW,2BAAKD,GAAN,IAAe1E,KAAM4E,EAAIZ,OAAOnB,UAkBJ5D,KAAK,MAAMD,KAAK,WAAWyE,GAAG,kBAAkBI,YAAY,qGAC9FnF,UAAU,uCAAuCgF,UAAQ,EAACb,MAAO6B,EAAQ1E,OACzE,0BAAMyD,GAAG,wBAAwB/E,UAAU,sBAA3C,6GAGFe,YAAY,6CAAUV,OAAQD,EAAMC,OAAQI,QAASL,EAAMK,QAASI,SApBxE,SAAsBqF,GACpBA,EAAIX,iBACJnF,EAAMwC,WAAWoD,OC2HNG,MAhIf,WAAgB,IAAD,EAC+C3E,IAAMkD,UAAS,GAD9D,mBACN0B,EADM,KACkBC,EADlB,OAEyC7E,IAAMkD,UAAS,GAFxD,mBAEN4B,EAFM,KAEeC,EAFf,OAG6C/E,IAAMkD,UAAS,GAH5D,mBAGN8B,EAHM,KAGiBC,EAHjB,OAI2BjF,IAAMkD,SAAS,IAJ1C,mBAINgC,EAJM,KAIQC,EAJR,OAKyBnF,IAAMkD,SAAS,IALxC,mBAKN/C,EALM,KAKOiF,EALP,OAMapF,IAAMkD,SAAS,IAN5B,mBAMN7B,EANM,KAMCgE,EAND,KAiEb,SAASC,IACPL,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,EAAgB,IAiClB,OAlEAnF,IAAMsD,WAAU,WACdd,QAAQ+C,IAAI,CAAC9D,EAAI+D,SAAS,SAAU/D,EAAI+D,SAAS,cAC9CpD,MAAK,YAA4B,IAAD,mBAAzBqD,EAAyB,KAAdC,EAAc,KAC/BL,EAASI,GACTL,EAAeM,MAEhBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAGhB,IAyDA,kBAAC7F,EAAmBgG,SAApB,CAA6BpD,MAAOxC,GAClC,yBAAK3B,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEwC,aA1DR,WACEiE,GAAyB,IA0DnB9D,cAvDR,WACE0D,GAA0B,IAuDpBzD,WApDR,WACE2D,GAAuB,IAoDjB9F,QAASqG,EACTzE,YAlDR,SAAyB8B,GACvBwC,EAAgBxC,IAkDVhD,KAAMuF,EACNpE,WAzGR,SAAwBnB,IAENA,EAAKc,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAGNkB,EAAIuE,YAAJ,sBAA+BrG,EAAKY,MAA7EkB,EAAIwE,QAAJ,sBAA2BtG,EAAKY,OAAqD6B,MAAK,SAACoC,GAErG,IAAM0B,EAAW7E,EAAMC,KAAI,SAAC6E,GAAD,OAAOA,EAAE5F,MAAQZ,EAAKY,IAAMiE,EAAU2B,KAEjEd,EAASa,MAEVP,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA8FRhF,aA1FR,SAA0BjB,GACxB8B,EAAIuE,YAAJ,gBAAyBrG,EAAKY,MAC3B6B,MAAK,WAEJ,IAAM8D,EAAW7E,EAAM+E,QAAO,SAAC9B,GAAD,OAAaA,EAAQ/D,MAAQZ,EAAKY,OAEhE8E,EAASa,MAEVP,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAkFVvE,MAAOA,IAET,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAkBxC,OAAQ+F,EAAwB3F,QAASqG,EAAgBtB,aA9CjF,SAA0B0B,GACxBjE,EAAI4E,cAAc,WAAYX,GAAUtD,MAAK,SAAAkE,GAC3ClB,EAAekB,GACfhB,OAECK,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAyCZ,kBAAC,EAAD,CAAiB/G,OAAQmG,EAAuB/F,QAASqG,EAAgBjB,eArC/E,SAA4BkC,GAC1B9E,EAAI+E,YAAY,kBAAmBD,GAAYnE,MAAK,SAAAqE,GAClDrB,EAAeqB,GACfnB,OAECK,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAgCZ,kBAAC,EAAD,CAAe/G,OAAQiG,EAAqB7F,QAASqG,EAAgBlE,WA5B3E,SAAwBsF,GACtBjF,EAAIkF,YAAY,QAASD,GAAUtE,MAAK,SAAAoC,GACtCa,EAAS,CAACb,GAAF,mBAAcnD,KACtBiE,OAECK,OAAM,SAACC,GACNC,QAAQC,IAAIF,YClGAgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEd/B,OAAM,SAAAgC,GACL9B,QAAQ8B,MAAMA,EAAMC,a,sCEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.f30e8a0b.chunk.js","sourcesContent":["import React from 'react';\nimport Logo from '../images/logo.svg'\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo\" src={Logo}></div>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={props.isOpen ? `popup popup__${props.name} popup_opened` : `popup popup__${props.name}`}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className=\"popup__close popup__close-btn\" onClick={props.onClose}></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form name={props.formName} className=\"popup__form\" noValidate onSubmit={props.onSubmit}>\n          {props.children}\n          <button type=\"submit\" className=\"popup__submit-button\">{props.buttonTitle}</button>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <section className={Object.keys(props.card).length > 0 ? `popup popup__increase-img popup_opened` : `popup popup__increase-img`}>\n      <div className=\"popup__container-increase\">\n        <button type=\"button\" className=\"popup__close-img popup__close-btn\" onClick={props.onClose}></button>\n        <figure className=\"popup__figure\">\n          <img alt={props.card.name} src={props.card.link} className=\"popup__img\" />\n          <figcaption className=\"popup__figcaption\">{props.card.name}</figcaption>\n        </figure>\n      </div>\n    </section>\n  )\n}\n\nexport default ImagePopup;\n\n\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext)\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    isOwn ? 'elements__trash elements__trash_active' : 'elements__trash'\n  );\n\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n    isLiked ? 'elements__like elements__like_active' : 'elements__like'\n  );\n\n  return (\n    <li className=\"elements__list-item\">\n      <figure className=\"elements__figure\">\n        <button type=\"reset\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n        <img className=\"elements__image\" src={props.card.link} alt={props.card.name} onClick={handleClick} />\n        <figcaption className=\"elements__figcaption\">\n          <h3 className=\"elements__title\">{props.card.name}</h3>\n          <div className=\"elements__like_group\">\n            <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n            <span className=\"elements__like_number\">{props.card.likes.length}</span>\n          </div>\n        </figcaption>\n      </figure>\n    </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n// import api from '../utils/Api.js';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext)\n\n  return (\n    <main>\n      <section className=\"profile\">\n        <div className=\"profile__group\" onClick={props.onEditAvatar}>\n          <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"фото\" />\n          <div className=\"profile__avatar_pencil\"></div>\n        </div>\n\n        <div className=\"profile__info\">\n          <div className=\"profile__wrapper\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <p className=\"profile__subtitle\">{currentUser.about}</p></div>\n          <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {props.cards.map((card, i) => (\n            <Card key={i}\n              card={card}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete} />\n          ))}\n        </ul>\n      </section>\n      <ImagePopup\n        card={props.card}\n        onClose={props.onClose} />\n      <PopupWithForm name=\"question\" title=\"Вы уверены?\" buttonTitle=\"Да\" />\n    </main>\n  )\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <section className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </section>\n  )\n}\n\nexport default Footer;","class Api {\n    constructor(baseUrl, token) {\n        this._baseUrl = baseUrl\n        this._token = token;\n\n    }\n\n    getItems(url) {\n        return fetch(/*`${this.baseUrl}/users/me`*/this._baseUrl + url, {\n            method: 'GET',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n\n    patchUserInfo(url, value) {\n        return fetch(/*`${this.baseUrl}/users/me`*/this._baseUrl + url, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: /*'Marie Skłodowska Curie',*/value.name,\n                about: /*'Physicist and Chemist'*/value.about\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n\n\n    postNewCard(url, values) {\n        return fetch(this._baseUrl + url, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: values.name,\n                link: values.link\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n\n    patchAvatar(url, item) {\n        return fetch(this._baseUrl + url, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: item.avatar\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n\n\n    deleteItems(url) {\n        return fetch(this._baseUrl + url, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n\n    putLike(url) {\n        return fetch(this._baseUrl + url, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(`Ошибка: ${res.status}`)\n            })\n    }\n}\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-15/', 'ec958303-2883-4fc9-affb-18ff9d007ba6')\nexport default api;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleChangeName(e) {\n    setName(e.target.value)\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value)\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"edit-profile\" title=\"Редактировать профиль\" formName=\"edit-form\" children={\n      <>\n        <input type=\"text\" name=\"name\" id=\"name-input\" className=\"popup__item popup__item_name\" required minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\"\n          onChange={handleChangeName} value={name || ''}\n        />\n        <span id=\"name-input-error\" className=\"popup__input-error\">Вы пропустили это поле</span>\n        <input type=\"text\" name=\"job\" id=\"job-input\" className=\"popup__item popup__item_job\" required minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\"\n          onChange={handleChangeDescription} value={description || ''}/>\n        <span id=\"job-input-error\" className=\"popup__input-error\">Вы пропустили это поле</span>\n      </>\n    }\n      buttonTitle=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n  return (\n    <PopupWithForm name=\"editavatar\" title=\"Обновить аватар\" formName=\"edit-avatar\" children={\n      <>\n        <input ref={avatarRef} type=\"url\" id=\"avatar-input\" name=\"link\" placeholder=\"Ссылка\" className=\"popup__item popup__item_avatar\" required minLength=\"1\" />\n        <span id=\"avatar-input-error\" className=\"popup__input-error\">Вы пропустили это поле</span>\n      </>\n    }\n      buttonTitle=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\n\nfunction AddPlacePopup(props) {\n  const [newCard, setNewCard] = React.useState({ name: '', link: '' });\n\n  function handleNameinput(evt) {\n    setNewCard({ ...newCard, name: evt.target.value })\n  }\n\n  function handleLinkInput(evt) {\n    setNewCard({ ...newCard, link: evt.target.value })\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAddPlace(newCard);\n  }\n\n\n\n  return (\n    <PopupWithForm name=\"add-card\" title=\"Новое место\" formName=\"add-form\" children={\n      <>\n        <input onChange={handleNameinput} type=\"text\" name=\"placename\" id=\"place-name-input\" placeholder=\"Название\" \n        className=\"popup__item popupadd__item_place-name\" required minLength=\"1\" maxLength=\"30\" \n        value={newCard.name}\n        />\n        <span id=\"place-name-input-error\" className=\"popup__input-error\">Вы пропустили это поле</span>\n        <input onChange={handleLinkInput} type=\"url\" name=\"placeimg\" id=\"place-img-input\" placeholder=\"Ссылка на картинку\" \n        className=\"popup__item popupadd__item_place-img\" required value={newCard.link}/>\n        <span id=\"place-img-input-error\" className=\"popup__input-error\">Введите адрес сайта</span>\n      </>\n    }\n      buttonTitle=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default AddPlacePopup","import React from 'react';\nimport '../index.css';\nimport '../components/Header.js'\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\nimport api from '../utils/Api.js'\nimport EditProfilePopup from './EditProfilePopup.js'\nimport EditAvatarPopup from './EditAvatarPopup.js'\nimport AddPlacePopup from './AddPlacePopup.js'\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setcurrentUser] = React.useState({})\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    (!isLiked ? api.putLike(`cards/likes/${card._id}`) : api.deleteItems(`cards/likes/${card._id}`)).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err)\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteItems(`cards/${card._id}`)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.filter((current) => current._id !== card._id);\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err)\n      });\n  }\n  React.useEffect(() => {\n    Promise.all([api.getItems('cards'), api.getItems('users/me')])\n      .then(([cardsData, userData]) => {\n        setCards(cardsData);\n        setcurrentUser(userData)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  },\n    []\n  )\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleCardClick(value) {\n    setSelectedCard(value)\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(userData) {\n    api.patchUserInfo('users/me', userData).then(newUserInfo => {\n      setcurrentUser(newUserInfo);\n      closeAllPopups();\n    })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  function handleUpdateAvatar(userAvatar) {\n    api.patchAvatar('users/me/avatar', userAvatar).then(newUserAvatar => {\n      setcurrentUser(newUserAvatar);\n      closeAllPopups();\n    })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  function handleAddPlace(cardData) {\n    api.postNewCard('cards', cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onClose={closeAllPopups}\n          onCardClick={handleCardClick}\n          card={selectedCard}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cards={cards}\n        />\n        <Footer />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\n\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}